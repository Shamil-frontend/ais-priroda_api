generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model d_customer {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                     String                   @id @default(dbgenerated())
  last_name              String
  first_name             String
  middle_name            String?                  @default("")
  birth_date             DateTime
  birth_place            String?
  doc_serial             String
  doc_number             String
  doc_issue_date         DateTime
  doc_issue_place        String
  doc_code               String
  doc_address            String
  actual_address         String?
  phone_number1          String?
  phone_number2          String?
  email                  String?
  organization_name      String?
  organization_address   String?
  organization_email     String?
  organization_phone     String?
  is_remove              Boolean                  @default(false)
  employee_name_add      String
  date_add               DateTime                 @default(now())
  legal_form             String?
  customer_inn           String?
  customer_snils         String?
  customer_gender        Int
  photo_name             String?
  photo_ext              String?
  photo_size             Int?
  d_customer_hunting_lic d_customer_hunting_lic[]

  @@index([id], name: "d_customer_id_idx")
  @@index([last_name, first_name, middle_name, email, phone_number1, phone_number2], name: "d_customer_last_name_first_name_middle_name_email_phone_num_idx")
}

model d_customer_hunting_lic {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                          String                        @id @default(dbgenerated())
  d_customer_id               String
  serial_license              String
  number_license              String
  issue_date                  DateTime
  employees_authorized        String
  issue_body                  String
  reestr_date                 DateTime
  cancelled_date              DateTime?
  cancelled_ground            String?
  employee_name_add           String
  date_add                    DateTime                      @default(now())
  is_remove                   Boolean                       @default(false)
  employee_name_modify        String?
  date_modify                 DateTime?
  d_customer                  d_customer                    @relation(fields: [d_customer_id], references: [id])
  d_customer_hunting_lic_perm d_customer_hunting_lic_perm[]

  @@index([d_customer_id], name: "d_customer_hunting_lic_d_customer_id_idx")
  @@index([id], name: "d_customer_hunting_lic_id_idx")
}

model d_refresh_tokens {
  id            String     @id
  employee_id   String
  refresh_token String
  expire_time   DateTime
  used          Boolean
  s_employee    s_employee @relation(fields: [employee_id], references: [id])

  @@index([employee_id, used], name: "employee_id_used_idx")
}

model s_animal {
  id              Int               @id @default(autoincrement())
  animal_name     String
  description     String?
  // This type is currently not supported.
  // animal_file  bytea?
  s_season_animal s_season_animal[]

  @@index([id], name: "s_animal_id_idx")
}

model s_employee {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                          String                        @id @default(dbgenerated())
  s_job_pos_id                Int
  employee_last_name          String
  employee_first_name         String
  employee_middle_name        String?                       @default("")
  employee_snils              String?
  employee_phone_number1      String?
  employee_phone_number2      String?
  employee_email              String?
  employee_login              String                        @unique
  employee_password           String
  employee_name_add           String
  date_add                    DateTime                      @default(now())
  is_remove                   Boolean                       @default(false)
  is_active                   Boolean                       @default(true)
  s_job_pos                   s_job_pos                     @relation(fields: [s_job_pos_id], references: [id])
  d_customer_hunting_lic_perm d_customer_hunting_lic_perm[]
  d_refresh_tokens            d_refresh_tokens[]
  s_employee_role             s_employee_role[]

  @@index([id], name: "s_employee_id_idx")
  @@index([s_job_pos_id], name: "s_employee_s_job_pos_id_idx")
}

model s_employee_role {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                String     @id @default(dbgenerated())
  s_employee_id     String
  s_role_id         Int
  employee_name_add String
  date_add          DateTime   @default(now())
  s_employee        s_employee @relation(fields: [s_employee_id], references: [id])
  s_role            s_role     @relation(fields: [s_role_id], references: [id])

  @@index([id], name: "s_employee_role_id_idx")
  @@index([s_employee_id], name: "s_employee_role_s_employee_id_idx")
  @@index([s_role_id], name: "s_employee_role_s_role_id_idx")
}

model s_job_pos {
  id         Int          @id @default(autoincrement())
  pos_name   String
  s_employee s_employee[]

  @@index([id], name: "s_job_pos_id_idx")
}

model s_role {
  id              Int               @id @default(autoincrement())
  role_name       String
  s_employee_role s_employee_role[]

  @@index([id], name: "s_role_id_idx")
}

model s_season {
  id                          Int                           @id @default(autoincrement())
  season_name                 String
  season_tariff               Float
  season_charge               Float
  d_customer_hunting_lic_perm d_customer_hunting_lic_perm[]
  s_hunting_farm_season       s_hunting_farm_season[]
  s_season_animal             s_season_animal[]

  @@index([id], name: "s_season_id_idx")
}

model s_season_animal {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id          String   @id @default(dbgenerated())
  s_season_id Int
  s_animal_id Int
  norm_day    Int?
  norm_season Int?
  s_animal    s_animal @relation(fields: [s_animal_id], references: [id])
  s_season    s_season @relation(fields: [s_season_id], references: [id])

  @@index([id], name: "s_season_animal_id_idx")
  @@index([s_animal_id], name: "s_season_animal_s_animal_id_idx")
  @@index([s_season_id], name: "s_season_animal_s_season_id_idx")
}

model s_settings {
  id          Int     @id @default(autoincrement())
  param_name  String?
  param_value String?
  commentt    String?

  @@index([id], name: "s_settings_id_idx")
}

model d_customer_hunting_lic_perm {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                        String                 @id @default(dbgenerated())
  d_customer_hunting_lic_id String
  s_hunting_type_id         String
  s_method_remove_id        String
  serial_form               String?
  number_form               Int?
  fio_given                 String
  date_given                DateTime
  s_hunting_farm_id         String
  tariff_                   Float?
  charge_                   Float?
  s_employee_id             String
  job_pos_name              String?
  s_hunting_farm_season_id  String?
  s_season_id               Int?
  date_add                  DateTime               @default(now())
  employee_name_add         String
  employee_name_modify      String?
  commentt                  String?
  is_remove                 Boolean                @default(false)
  ip_address_add            String?
  ip_address_modify         String?
  date_modify               DateTime?
  d_customer_hunting_lic    d_customer_hunting_lic @relation(fields: [d_customer_hunting_lic_id], references: [id])
  s_employee                s_employee             @relation(fields: [s_employee_id], references: [id])
  s_hunting_farm            s_hunting_farm         @relation(fields: [s_hunting_farm_id], references: [id])
  s_hunting_farm_season     s_hunting_farm_season? @relation(fields: [s_hunting_farm_season_id], references: [id])
  s_hunting_type            s_hunting_type         @relation(fields: [s_hunting_type_id], references: [id])
  s_method_remove           s_method_remove        @relation(fields: [s_method_remove_id], references: [id])
  s_season                  s_season?              @relation(fields: [s_season_id], references: [id])

  @@index([d_customer_hunting_lic_id], name: "d_customer_hunting_lic_perm_d_customer_hunting_lic_id_idx")
  @@index([id], name: "d_customer_hunting_lic_perm_id_idx")
  @@index([s_employee_id], name: "d_customer_hunting_lic_perm_s_employees_id_idx")
  @@index([s_hunting_farm_id], name: "d_customer_hunting_lic_perm_s_hunting_farm_id_idx")
  @@index([s_hunting_farm_season_id], name: "d_customer_hunting_lic_perm_s_hunting_farm_season_id_idx")
  @@index([s_hunting_type_id], name: "d_customer_hunting_lic_perm_s_hunting_type_id_idx")
  @@index([s_method_remove_id], name: "d_customer_hunting_lic_perm_s_method_remove_id_idx")
  @@index([s_season_id], name: "d_customer_hunting_lic_perm_s_season_id_idx")
}

model s_bank {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                   String           @id @default(dbgenerated())
  bank_name            String
  bank_bik             String
  address_full         String
  bank_ks              String
  date_add             DateTime         @default(now())
  employee_name_add    String
  employee_name_modify String?
  commentt             String?
  is_remove            Boolean          @default(false)
  ip_address_add       String?
  ip_address_modify    String?
  date_modify          DateTime?
  s_legal_person       s_legal_person[]

  @@index([id], name: "s_bank_id_idx")
}

model s_hunting_farm {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                          String                        @id @default(dbgenerated())
  hunting_farm_name           String
  hunting_farm_area           Float?
  s_hunting_farm_type_id      String
  s_legal_person_id           String?
  hunting_address             String?
  hunting_farm_description    String?
  date_add                    DateTime                      @default(now())
  employee_name_add           String
  employee_name_modify        String?
  commentt                    String?
  is_remove                   Boolean                       @default(false)
  ip_address_add              String?
  ip_address_modify           String?
  date_modify                 DateTime?
  s_hunting_farm_type         s_hunting_farm_type           @relation(fields: [s_hunting_farm_type_id], references: [id])
  s_legal_person              s_legal_person?               @relation(fields: [s_legal_person_id], references: [id])
  d_customer_hunting_lic_perm d_customer_hunting_lic_perm[]
  s_hunting_farm_season       s_hunting_farm_season[]

  @@index([id], name: "s_hunting_farm_id_idx")
  @@index([s_hunting_farm_type_id], name: "s_hunting_farm_s_hunting_farm_type_id_idx")
  @@index([s_legal_person_id], name: "s_hunting_farm_s_legal_person_id_idx")
}

model s_hunting_farm_season {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                          String                        @id @default(dbgenerated())
  s_hunting_farm_id           String
  date_start                  DateTime
  date_stop                   DateTime
  s_season_id                 Int?
  date_add                    DateTime                      @default(now())
  employee_name_add           String
  employee_name_modify        String?
  commentt                    String?
  is_remove                   Boolean                       @default(false)
  ip_address_add              String?
  ip_address_modify           String?
  date_modify                 DateTime?
  s_hunting_farm              s_hunting_farm                @relation(fields: [s_hunting_farm_id], references: [id])
  s_season                    s_season?                     @relation(fields: [s_season_id], references: [id])
  d_customer_hunting_lic_perm d_customer_hunting_lic_perm[]

  @@index([id], name: "s_hunting_farm_season_id_idx")
  @@index([s_hunting_farm_id], name: "s_hunting_farm_season_s_hunting_farm_id_idx")
  @@index([s_season_id], name: "s_hunting_farm_season_s_season_id_idx")
}

model s_hunting_farm_type {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                   String           @id @default(dbgenerated())
  type_name            String
  date_add             DateTime         @default(now())
  employee_name_add    String
  employee_name_modify String?
  commentt             String?
  is_remove            Boolean          @default(false)
  ip_address_add       String?
  ip_address_modify    String?
  date_modify          DateTime?
  s_hunting_farm       s_hunting_farm[]

  @@index([id], name: "s_hunting_farm_type_id_idx")
}

model s_hunting_type {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                          String                        @id @default(dbgenerated())
  type_name                   String
  date_add                    DateTime                      @default(now())
  employee_name_add           String
  employee_name_modify        String?
  commentt                    String?
  is_remove                   Boolean                       @default(false)
  ip_address_add              String?
  ip_address_modify           String?
  date_modify                 DateTime?
  d_customer_hunting_lic_perm d_customer_hunting_lic_perm[]

  @@index([id], name: "s_hunting_type_id_idx")
}

model s_legal_person {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                               String                         @id @default(dbgenerated())
  legal_name                       String
  legal_address                    String
  actual_address                   String
  inn                              String?
  kpp                              String?
  okved                            String?
  ogrn                             String?
  head_fio                         String?
  phone_number1                    String?
  phone_number2                    String?
  e_mail                           String?
  s_bank_id                        String?
  bank_account                     String?
  date_contract                    DateTime?
  egrul_date                       DateTime?
  s_services_sub_type_recipient_id Int?
  s_bank                           s_bank?                        @relation(fields: [s_bank_id], references: [id])
  s_services_sub_type_recipient    s_services_sub_type_recipient? @relation(fields: [s_services_sub_type_recipient_id], references: [id])
  s_hunting_farm                   s_hunting_farm[]

  @@index([id], name: "s_legal_person_id_idx")
  @@index([s_bank_id], name: "s_legal_person_s_bank_id_idx")
  @@index([s_services_sub_type_recipient_id], name: "s_legal_person_s_services_sub_type_recipient_id_idx")
}

model s_method_remove {
  /// The value of this field is generated by the database as: `uuid_generate_v4()`.
  id                          String                        @id @default(dbgenerated())
  method_name                 String
  date_add                    DateTime                      @default(now())
  employee_name_add           String
  employee_name_modify        String?
  commentt                    String?
  is_remove                   Boolean                       @default(false)
  ip_address_add              String?
  ip_address_modify           String?
  date_modify                 DateTime?
  d_customer_hunting_lic_perm d_customer_hunting_lic_perm[]

  @@index([id], name: "s_method_remove_id_idx")
}

model s_services_sub_type_recipient {
  id              Int              @id
  type_name       String
  commentt        String?
  id_parent       Int
  type_name_small String?
  s_legal_person  s_legal_person[]

  @@index([id], name: "s_services_sub_type_recipient_id_idx")
}
